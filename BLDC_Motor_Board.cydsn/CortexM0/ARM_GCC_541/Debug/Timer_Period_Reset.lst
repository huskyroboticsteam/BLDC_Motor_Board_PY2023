ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_Period_Reset.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Timer_Period_Reset_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Timer_Period_Reset_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	Timer_Period_Reset_Enable, %function
  25              	Timer_Period_Reset_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\Timer_Period_Reset.c"
   1:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer_Period_Reset.c **** * File Name: Timer_Period_Reset.c
   3:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Version 2.80
   4:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
   5:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Description:
   6:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  or a capture event.
  14:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
  15:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Note:
  16:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
  17:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
  18:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/Timer_Period_Reset.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/Timer_Period_Reset.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/Timer_Period_Reset.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  24:Generated_Source\PSoC4/Timer_Period_Reset.c **** #include "Timer_Period_Reset.h"
  25:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  26:Generated_Source\PSoC4/Timer_Period_Reset.c **** uint8 Timer_Period_Reset_initVar = 0u;
  27:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  28:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  29:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
  30:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_Init
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 2


  31:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
  32:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
  33:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
  34:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
  36:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
  37:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
  38:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
  39:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
  40:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
  41:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
  42:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
  43:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_Init(void) 
  44:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
  45:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if(!Timer_Period_Reset_UsingFixedFunction)
  46:Generated_Source\PSoC4/Timer_Period_Reset.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC4/Timer_Period_Reset.c ****             uint8 Timer_Period_Reset_interruptState;
  48:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  50:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (Timer_Period_Reset_UsingFixedFunction)
  51:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL &= Timer_Period_Reset_CTRL_ENABLE;
  53:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  54:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC4/Timer_Period_Reset.c ****             Timer_Period_Reset_CONTROL2 &= ((uint8)(~Timer_Period_Reset_CTRL_MODE_MASK));
  57:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  59:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC4/Timer_Period_Reset.c ****             Timer_Period_Reset_CONTROL3 &= ((uint8)(~Timer_Period_Reset_CTRL_MODE_MASK));
  61:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  63:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (Timer_Period_Reset_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC4/Timer_Period_Reset.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC4/Timer_Period_Reset.c ****             Timer_Period_Reset_CONTROL |= 0x04u;
  67:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  69:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (Timer_Period_Reset_RunModeUsed == 2)
  70:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 Timer_Period_Reset_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  76:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 Timer_Period_Reset_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  82:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  84:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (Timer_Period_Reset_UsingHWEnable != 0)
  85:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 Timer_Period_Reset_CONTROL2 |= Timer_Period_Reset_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 3


  88:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  90:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 Timer_Period_Reset_CONTROL3 &= ((uint8)(~Timer_Period_Reset_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 Timer_Period_Reset_CONTROL3 |= Timer_Period_Reset_CTRL_RCOD;
  94:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  95:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 Timer_Period_Reset_CONTROL3 &= ((uint8)(~Timer_Period_Reset_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 Timer_Period_Reset_CONTROL3 |= Timer_Period_Reset_CTRL_ENBL;
  98:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
  99:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 Timer_Period_Reset_CONTROL3 |= Timer_Period_Reset_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 103:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 105:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_RT1 &= ((uint8)(~Timer_Period_Reset_RT1_MASK));
 107:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_RT1 |= Timer_Period_Reset_SYNC;
 108:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 109:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_RT1 &= ((uint8)(~Timer_Period_Reset_SYNCDSI_MASK));
 111:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_RT1 |= Timer_Period_Reset_SYNCDSI_EN;
 112:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 113:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL2 |= Timer_Period_Reset_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 117:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC4/Timer_Period_Reset.c ****     Timer_Period_Reset_WritePeriod(Timer_Period_Reset_INIT_PERIOD);
 119:Generated_Source\PSoC4/Timer_Period_Reset.c ****     Timer_Period_Reset_WriteCounter(Timer_Period_Reset_INIT_PERIOD);
 120:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 121:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (Timer_Period_Reset_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CAPTURE_COUNT_CTRL |= Timer_Period_Reset_CNTR_ENABLE;
 123:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_SetCaptureCount(Timer_Period_Reset_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 126:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UsingFixedFunction)
 127:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (Timer_Period_Reset_SoftwareCaptureMode)
 128:Generated_Source\PSoC4/Timer_Period_Reset.c ****             Timer_Period_Reset_SetCaptureMode(Timer_Period_Reset_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 131:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (Timer_Period_Reset_SoftwareTriggerMode)
 132:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 if (0u == (Timer_Period_Reset_CONTROL & Timer_Period_Reset__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 {
 135:Generated_Source\PSoC4/Timer_Period_Reset.c ****                     Timer_Period_Reset_SetTriggerMode(Timer_Period_Reset_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC4/Timer_Period_Reset.c ****                 }
 137:Generated_Source\PSoC4/Timer_Period_Reset.c ****             #endif /* (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 140:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 144:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 4


 145:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_STATUS_AUX_CTRL |= Timer_Period_Reset_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 147:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC4/Timer_Period_Reset.c ****         CyExitCriticalSection(Timer_Period_Reset_interruptState);
 149:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 150:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (Timer_Period_Reset_EnableTriggerMode)
 151:Generated_Source\PSoC4/Timer_Period_Reset.c ****             Timer_Period_Reset_EnableTrigger();
 152:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC4/Timer_Period_Reset.c **** 		
 154:Generated_Source\PSoC4/Timer_Period_Reset.c **** 		
 155:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #if (Timer_Period_Reset_InterruptOnCaptureCount && !Timer_Period_Reset_UDB_CONTROL_REG_REMO
 156:Generated_Source\PSoC4/Timer_Period_Reset.c ****             Timer_Period_Reset_SetInterruptCount(Timer_Period_Reset_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC4/Timer_Period_Reset.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 159:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_ClearFIFO();
 160:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 162:Generated_Source\PSoC4/Timer_Period_Reset.c ****     Timer_Period_Reset_SetInterruptMode(Timer_Period_Reset_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 164:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 165:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 166:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 167:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_Enable
 168:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 169:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 170:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 171:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Enable the Timer
 172:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 173:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 174:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 175:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 176:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 177:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 178:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 179:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 180:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_Enable(void) 
 181:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (Timer_Period_Reset_UsingFixedFunction)
 184:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_GLOBAL_ENABLE |= Timer_Period_Reset_BLOCK_EN_MASK;
 185:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_GLOBAL_STBY_ENABLE |= Timer_Period_Reset_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 188:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED || Timer_Period_Reset_UsingFixedFunction)
 190:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL |= Timer_Period_Reset_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 5


  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
  41              		.loc 1 192 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 76000F40 		.word	1074724982
  48              		.cfi_endproc
  49              	.LFE2:
  50              		.size	Timer_Period_Reset_Enable, .-Timer_Period_Reset_Enable
  51              		.section	.text.Timer_Period_Reset_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	Timer_Period_Reset_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	Timer_Period_Reset_Stop, %function
  57              	Timer_Period_Reset_Stop:
  58              	.LFB4:
 193:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 194:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 195:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_Start
 197:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 198:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 199:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 200:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 204:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 205:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 206:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 207:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 208:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 209:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 210:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Global variables:
 211:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Timer_Period_Reset_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC4/Timer_Period_Reset.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 214:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 215:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_Start(void) 
 216:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 217:Generated_Source\PSoC4/Timer_Period_Reset.c ****     if(Timer_Period_Reset_initVar == 0u)
 218:Generated_Source\PSoC4/Timer_Period_Reset.c ****     {
 219:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_Init();
 220:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 221:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC4/Timer_Period_Reset.c ****     }
 223:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 224:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC4/Timer_Period_Reset.c ****     Timer_Period_Reset_Enable();
 226:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 227:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 6


 228:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 229:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 230:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_Stop
 231:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 232:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 233:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 234:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  interrupts.
 236:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 237:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 238:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 239:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 240:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 241:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 242:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 243:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC4/Timer_Period_Reset.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 246:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 247:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_Stop(void) 
 248:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
  59              		.loc 1 248 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 249:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Disable Timer */
 250:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if(!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED || Timer_Period_Reset_UsingFixedFunction)
 251:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL &= ((uint8)(~Timer_Period_Reset_CTRL_ENABLE));
  64              		.loc 1 251 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 252:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 254:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (Timer_Period_Reset_UsingFixedFunction)
 256:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_GLOBAL_ENABLE &= ((uint8)(~Timer_Period_Reset_BLOCK_EN_MASK));
 257:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_Period_Reset_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
  70              		.loc 1 259 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 76000F40 		.word	1074724982
  77              		.cfi_endproc
  78              	.LFE4:
  79              		.size	Timer_Period_Reset_Stop, .-Timer_Period_Reset_Stop
  80              		.section	.text.Timer_Period_Reset_SetInterruptMode,"ax",%progbits
  81              		.align	2
  82              		.global	Timer_Period_Reset_SetInterruptMode
  83              		.code	16
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 7


  84              		.thumb_func
  85              		.type	Timer_Period_Reset_SetInterruptMode, %function
  86              	Timer_Period_Reset_SetInterruptMode:
  87              	.LFB5:
 260:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 261:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 262:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 263:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_SetInterruptMode
 264:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 265:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 266:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 267:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  be selected.
 270:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 271:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 272:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC4/Timer_Period_Reset.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 275:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 276:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 277:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 278:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
  88              		.loc 1 280 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
 281:Generated_Source\PSoC4/Timer_Period_Reset.c ****     Timer_Period_Reset_STATUS_MASK = interruptMode;
  94              		.loc 1 281 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 1870     		strb	r0, [r3]
 282:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
  97              		.loc 1 282 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              	.L9:
 101 0006 C046     		.align	2
 102              	.L8:
 103 0008 86000F40 		.word	1074724998
 104              		.cfi_endproc
 105              	.LFE5:
 106              		.size	Timer_Period_Reset_SetInterruptMode, .-Timer_Period_Reset_SetInterruptMode
 107              		.section	.text.Timer_Period_Reset_SoftwareCapture,"ax",%progbits
 108              		.align	2
 109              		.global	Timer_Period_Reset_SoftwareCapture
 110              		.code	16
 111              		.thumb_func
 112              		.type	Timer_Period_Reset_SoftwareCapture, %function
 113              	Timer_Period_Reset_SoftwareCapture:
 114              	.LFB6:
 283:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 284:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 285:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 8


 286:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_SoftwareCapture
 287:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 288:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 289:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 290:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 292:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 293:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 294:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 295:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 296:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 297:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 298:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Side Effects:
 299:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 301:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_SoftwareCapture(void) 
 303:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 115              		.loc 1 303 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 304:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if(Timer_Period_Reset_UsingFixedFunction)
 306:Generated_Source\PSoC4/Timer_Period_Reset.c ****         (void)CY_GET_REG16(Timer_Period_Reset_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #else
 308:Generated_Source\PSoC4/Timer_Period_Reset.c ****         (void)CY_GET_REG8(Timer_Period_Reset_COUNTER_LSB_PTR_8BIT);
 120              		.loc 1 308 0
 121 0000 014B     		ldr	r3, .L11
 122 0002 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif/* (Timer_Period_Reset_UsingFixedFunction) */
 310:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 123              		.loc 1 311 0
 124              		@ sp needed
 125 0004 7047     		bx	lr
 126              	.L12:
 127 0006 C046     		.align	2
 128              	.L11:
 129 0008 06000F40 		.word	1074724870
 130              		.cfi_endproc
 131              	.LFE6:
 132              		.size	Timer_Period_Reset_SoftwareCapture, .-Timer_Period_Reset_SoftwareCapture
 133              		.section	.text.Timer_Period_Reset_ReadStatusRegister,"ax",%progbits
 134              		.align	2
 135              		.global	Timer_Period_Reset_ReadStatusRegister
 136              		.code	16
 137              		.thumb_func
 138              		.type	Timer_Period_Reset_ReadStatusRegister, %function
 139              	Timer_Period_Reset_ReadStatusRegister:
 140              	.LFB7:
 312:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 313:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 314:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 315:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_ReadStatusRegister
 316:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 9


 317:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 318:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 319:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  be permuteable.
 322:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 323:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 324:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 325:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 326:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 327:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The contents of the status register
 328:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 329:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Side Effects:
 330:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 332:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 333:Generated_Source\PSoC4/Timer_Period_Reset.c **** uint8   Timer_Period_Reset_ReadStatusRegister(void) 
 334:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 141              		.loc 1 334 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 335:Generated_Source\PSoC4/Timer_Period_Reset.c ****     return (Timer_Period_Reset_STATUS);
 146              		.loc 1 335 0
 147 0000 014B     		ldr	r3, .L14
 148 0002 1878     		ldrb	r0, [r3]
 149 0004 C0B2     		uxtb	r0, r0
 336:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 150              		.loc 1 336 0
 151              		@ sp needed
 152 0006 7047     		bx	lr
 153              	.L15:
 154              		.align	2
 155              	.L14:
 156 0008 66000F40 		.word	1074724966
 157              		.cfi_endproc
 158              	.LFE7:
 159              		.size	Timer_Period_Reset_ReadStatusRegister, .-Timer_Period_Reset_ReadStatusRegister
 160              		.section	.text.Timer_Period_Reset_ReadControlRegister,"ax",%progbits
 161              		.align	2
 162              		.global	Timer_Period_Reset_ReadControlRegister
 163              		.code	16
 164              		.thumb_func
 165              		.type	Timer_Period_Reset_ReadControlRegister, %function
 166              	Timer_Period_Reset_ReadControlRegister:
 167              	.LFB8:
 337:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 338:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 339:Generated_Source\PSoC4/Timer_Period_Reset.c **** #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 341:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 342:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 343:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_ReadControlRegister
 344:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 345:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 346:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 10


 347:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 349:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 350:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 351:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 352:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 353:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The contents of the control register
 354:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 355:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/Timer_Period_Reset.c **** uint8 Timer_Period_Reset_ReadControlRegister(void) 
 357:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 168              		.loc 1 357 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 358:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC4/Timer_Period_Reset.c ****         return ((uint8)Timer_Period_Reset_CONTROL);
 173              		.loc 1 359 0
 174 0000 014B     		ldr	r3, .L17
 175 0002 1878     		ldrb	r0, [r3]
 176 0004 C0B2     		uxtb	r0, r0
 360:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #else
 361:Generated_Source\PSoC4/Timer_Period_Reset.c ****         return (0);
 362:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 177              		.loc 1 363 0
 178              		@ sp needed
 179 0006 7047     		bx	lr
 180              	.L18:
 181              		.align	2
 182              	.L17:
 183 0008 76000F40 		.word	1074724982
 184              		.cfi_endproc
 185              	.LFE8:
 186              		.size	Timer_Period_Reset_ReadControlRegister, .-Timer_Period_Reset_ReadControlRegister
 187              		.section	.text.Timer_Period_Reset_WriteControlRegister,"ax",%progbits
 188              		.align	2
 189              		.global	Timer_Period_Reset_WriteControlRegister
 190              		.code	16
 191              		.thumb_func
 192              		.type	Timer_Period_Reset_WriteControlRegister, %function
 193              	Timer_Period_Reset_WriteControlRegister:
 194              	.LFB9:
 364:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 365:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 366:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 367:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_WriteControlRegister
 368:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 369:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 370:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 371:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 373:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 374:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 376:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 11


 377:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 378:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 379:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 195              		.loc 1 380 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              	.LVL1:
 381:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL = control;
 201              		.loc 1 382 0
 202 0000 014B     		ldr	r3, .L20
 203 0002 1870     		strb	r0, [r3]
 383:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #else
 384:Generated_Source\PSoC4/Timer_Period_Reset.c ****         control = 0u;
 385:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 204              		.loc 1 386 0
 205              		@ sp needed
 206 0004 7047     		bx	lr
 207              	.L21:
 208 0006 C046     		.align	2
 209              	.L20:
 210 0008 76000F40 		.word	1074724982
 211              		.cfi_endproc
 212              	.LFE9:
 213              		.size	Timer_Period_Reset_WriteControlRegister, .-Timer_Period_Reset_WriteControlRegister
 214              		.section	.text.Timer_Period_Reset_ReadPeriod,"ax",%progbits
 215              		.align	2
 216              		.global	Timer_Period_Reset_ReadPeriod
 217              		.code	16
 218              		.thumb_func
 219              		.type	Timer_Period_Reset_ReadPeriod, %function
 220              	Timer_Period_Reset_ReadPeriod:
 221              	.LFB10:
 387:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 388:Generated_Source\PSoC4/Timer_Period_Reset.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 390:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 391:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 392:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_ReadPeriod
 393:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 394:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 395:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 396:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 398:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 399:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 400:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 401:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 402:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The present value of the counter.
 403:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 404:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 405:Generated_Source\PSoC4/Timer_Period_Reset.c **** uint8 Timer_Period_Reset_ReadPeriod(void) 
 406:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 12


 222              		.loc 1 406 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 407:Generated_Source\PSoC4/Timer_Period_Reset.c ****    #if(Timer_Period_Reset_UsingFixedFunction)
 408:Generated_Source\PSoC4/Timer_Period_Reset.c ****        return ((uint8)CY_GET_REG16(Timer_Period_Reset_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC4/Timer_Period_Reset.c ****    #else
 410:Generated_Source\PSoC4/Timer_Period_Reset.c ****        return (CY_GET_REG8(Timer_Period_Reset_PERIOD_LSB_PTR));
 227              		.loc 1 410 0
 228 0000 014B     		ldr	r3, .L23
 229 0002 1878     		ldrb	r0, [r3]
 230 0004 C0B2     		uxtb	r0, r0
 411:Generated_Source\PSoC4/Timer_Period_Reset.c ****    #endif /* (Timer_Period_Reset_UsingFixedFunction) */
 412:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 231              		.loc 1 412 0
 232              		@ sp needed
 233 0006 7047     		bx	lr
 234              	.L24:
 235              		.align	2
 236              	.L23:
 237 0008 26000F40 		.word	1074724902
 238              		.cfi_endproc
 239              	.LFE10:
 240              		.size	Timer_Period_Reset_ReadPeriod, .-Timer_Period_Reset_ReadPeriod
 241              		.section	.text.Timer_Period_Reset_WritePeriod,"ax",%progbits
 242              		.align	2
 243              		.global	Timer_Period_Reset_WritePeriod
 244              		.code	16
 245              		.thumb_func
 246              		.type	Timer_Period_Reset_WritePeriod, %function
 247              	Timer_Period_Reset_WritePeriod:
 248              	.LFB11:
 413:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 414:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 415:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 416:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_WritePeriod
 417:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 418:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 419:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 420:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 423:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 424:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC4/Timer_Period_Reset.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 427:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 428:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 429:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 430:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 431:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_WritePeriod(uint8 period) 
 432:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 249              		.loc 1 432 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 13


 253              		@ link register save eliminated.
 254              	.LVL2:
 433:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if(Timer_Period_Reset_UsingFixedFunction)
 434:Generated_Source\PSoC4/Timer_Period_Reset.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC4/Timer_Period_Reset.c ****         CY_SET_REG16(Timer_Period_Reset_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #else
 437:Generated_Source\PSoC4/Timer_Period_Reset.c ****         CY_SET_REG8(Timer_Period_Reset_PERIOD_LSB_PTR, period);
 255              		.loc 1 437 0
 256 0000 014B     		ldr	r3, .L26
 257 0002 1870     		strb	r0, [r3]
 438:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 258              		.loc 1 439 0
 259              		@ sp needed
 260 0004 7047     		bx	lr
 261              	.L27:
 262 0006 C046     		.align	2
 263              	.L26:
 264 0008 26000F40 		.word	1074724902
 265              		.cfi_endproc
 266              	.LFE11:
 267              		.size	Timer_Period_Reset_WritePeriod, .-Timer_Period_Reset_WritePeriod
 268              		.section	.text.Timer_Period_Reset_ReadCapture,"ax",%progbits
 269              		.align	2
 270              		.global	Timer_Period_Reset_ReadCapture
 271              		.code	16
 272              		.thumb_func
 273              		.type	Timer_Period_Reset_ReadCapture, %function
 274              	Timer_Period_Reset_ReadCapture:
 275              	.LFB12:
 440:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 441:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 442:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 443:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_ReadCapture
 444:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 445:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 446:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 447:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 449:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 450:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 451:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 452:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 453:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Present Capture value.
 454:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 455:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 456:Generated_Source\PSoC4/Timer_Period_Reset.c **** uint8 Timer_Period_Reset_ReadCapture(void) 
 457:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 276              		.loc 1 457 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 458:Generated_Source\PSoC4/Timer_Period_Reset.c ****    #if(Timer_Period_Reset_UsingFixedFunction)
 459:Generated_Source\PSoC4/Timer_Period_Reset.c ****        return ((uint8)CY_GET_REG16(Timer_Period_Reset_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC4/Timer_Period_Reset.c ****    #else
 461:Generated_Source\PSoC4/Timer_Period_Reset.c ****        return (CY_GET_REG8(Timer_Period_Reset_CAPTURE_LSB_PTR));
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 14


 281              		.loc 1 461 0
 282 0000 014B     		ldr	r3, .L29
 283 0002 1878     		ldrb	r0, [r3]
 284 0004 C0B2     		uxtb	r0, r0
 462:Generated_Source\PSoC4/Timer_Period_Reset.c ****    #endif /* (Timer_Period_Reset_UsingFixedFunction) */
 463:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 285              		.loc 1 463 0
 286              		@ sp needed
 287 0006 7047     		bx	lr
 288              	.L30:
 289              		.align	2
 290              	.L29:
 291 0008 46000F40 		.word	1074724934
 292              		.cfi_endproc
 293              	.LFE12:
 294              		.size	Timer_Period_Reset_ReadCapture, .-Timer_Period_Reset_ReadCapture
 295              		.section	.text.Timer_Period_Reset_WriteCounter,"ax",%progbits
 296              		.align	2
 297              		.global	Timer_Period_Reset_WriteCounter
 298              		.code	16
 299              		.thumb_func
 300              		.type	Timer_Period_Reset_WriteCounter, %function
 301              	Timer_Period_Reset_WriteCounter:
 302              	.LFB13:
 464:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 465:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 466:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_WriteCounter
 468:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 469:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 470:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 471:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 473:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 474:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 476:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 477:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 478:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 479:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 480:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_WriteCounter(uint8 counter) 
 481:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 303              		.loc 1 481 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL3:
 482:Generated_Source\PSoC4/Timer_Period_Reset.c ****    #if(Timer_Period_Reset_UsingFixedFunction)
 483:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC4/Timer_Period_Reset.c ****          * allow this register to be written
 485:Generated_Source\PSoC4/Timer_Period_Reset.c ****          */
 486:Generated_Source\PSoC4/Timer_Period_Reset.c ****         CY_SET_REG16(Timer_Period_Reset_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC4/Timer_Period_Reset.c ****         
 488:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #else
 489:Generated_Source\PSoC4/Timer_Period_Reset.c ****         CY_SET_REG8(Timer_Period_Reset_COUNTER_LSB_PTR, counter);
 309              		.loc 1 489 0
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 15


 310 0000 014B     		ldr	r3, .L32
 311 0002 1870     		strb	r0, [r3]
 490:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 312              		.loc 1 491 0
 313              		@ sp needed
 314 0004 7047     		bx	lr
 315              	.L33:
 316 0006 C046     		.align	2
 317              	.L32:
 318 0008 06000F40 		.word	1074724870
 319              		.cfi_endproc
 320              	.LFE13:
 321              		.size	Timer_Period_Reset_WriteCounter, .-Timer_Period_Reset_WriteCounter
 322              		.section	.text.Timer_Period_Reset_ReadCounter,"ax",%progbits
 323              		.align	2
 324              		.global	Timer_Period_Reset_ReadCounter
 325              		.code	16
 326              		.thumb_func
 327              		.type	Timer_Period_Reset_ReadCounter, %function
 328              	Timer_Period_Reset_ReadCounter:
 329              	.LFB14:
 492:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 493:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 494:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 495:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_ReadCounter
 496:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 497:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 498:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 499:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 501:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 502:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 503:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 504:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 505:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Present compare value.
 506:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 507:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 508:Generated_Source\PSoC4/Timer_Period_Reset.c **** uint8 Timer_Period_Reset_ReadCounter(void) 
 509:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 330              		.loc 1 509 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 510:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if(Timer_Period_Reset_UsingFixedFunction)
 514:Generated_Source\PSoC4/Timer_Period_Reset.c ****         (void)CY_GET_REG16(Timer_Period_Reset_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #else
 516:Generated_Source\PSoC4/Timer_Period_Reset.c ****         (void)CY_GET_REG8(Timer_Period_Reset_COUNTER_LSB_PTR_8BIT);
 335              		.loc 1 516 0
 336 0000 024B     		ldr	r3, .L35
 337 0002 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif/* (Timer_Period_Reset_UsingFixedFunction) */
 518:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 16


 519:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if(Timer_Period_Reset_UsingFixedFunction)
 521:Generated_Source\PSoC4/Timer_Period_Reset.c ****         return ((uint8)CY_GET_REG16(Timer_Period_Reset_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #else
 523:Generated_Source\PSoC4/Timer_Period_Reset.c ****         return (CY_GET_REG8(Timer_Period_Reset_CAPTURE_LSB_PTR));
 338              		.loc 1 523 0
 339 0004 024B     		ldr	r3, .L35+4
 340 0006 1878     		ldrb	r0, [r3]
 341 0008 C0B2     		uxtb	r0, r0
 524:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* (Timer_Period_Reset_UsingFixedFunction) */
 525:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 342              		.loc 1 525 0
 343              		@ sp needed
 344 000a 7047     		bx	lr
 345              	.L36:
 346              		.align	2
 347              	.L35:
 348 000c 06000F40 		.word	1074724870
 349 0010 46000F40 		.word	1074724934
 350              		.cfi_endproc
 351              	.LFE14:
 352              		.size	Timer_Period_Reset_ReadCounter, .-Timer_Period_Reset_ReadCounter
 353              		.section	.text.Timer_Period_Reset_ClearFIFO,"ax",%progbits
 354              		.align	2
 355              		.global	Timer_Period_Reset_ClearFIFO
 356              		.code	16
 357              		.thumb_func
 358              		.type	Timer_Period_Reset_ClearFIFO, %function
 359              	Timer_Period_Reset_ClearFIFO:
 360              	.LFB15:
 526:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 527:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 528:Generated_Source\PSoC4/Timer_Period_Reset.c **** #if(!Timer_Period_Reset_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 530:Generated_Source\PSoC4/Timer_Period_Reset.c ****     
 531:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 532:Generated_Source\PSoC4/Timer_Period_Reset.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC4/Timer_Period_Reset.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC4/Timer_Period_Reset.c ****  ******************************************************************************/
 535:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 536:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 537:Generated_Source\PSoC4/Timer_Period_Reset.c **** #if (Timer_Period_Reset_SoftwareCaptureMode)
 538:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 539:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 540:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 541:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_SetCaptureMode
 542:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 543:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 544:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 545:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 547:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 548:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  #define Timer_Period_Reset__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC4/Timer_Period_Reset.c **** #define Timer_Period_Reset__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC4/Timer_Period_Reset.c **** #define Timer_Period_Reset__B_TIMER__CM_FALLINGEDGE 2
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 17


 553:Generated_Source\PSoC4/Timer_Period_Reset.c **** #define Timer_Period_Reset__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC4/Timer_Period_Reset.c **** #define Timer_Period_Reset__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC4/Timer_Period_Reset.c ****  identifiers
 556:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Timer_Period_Reset__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Timer_Period_Reset__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Timer_Period_Reset__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Timer_Period_Reset__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 562:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 563:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 564:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 565:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 566:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 568:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC4/Timer_Period_Reset.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_Period_Reset_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC4/Timer_Period_Reset.c ****     captureMode &= (Timer_Period_Reset_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 572:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL &= ((uint8)(~Timer_Period_Reset_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 576:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL |= captureMode;
 578:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 580:Generated_Source\PSoC4/Timer_Period_Reset.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 582:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 583:Generated_Source\PSoC4/Timer_Period_Reset.c **** #if (Timer_Period_Reset_SoftwareTriggerMode)
 584:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 585:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 586:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 587:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_SetTriggerMode
 588:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 589:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 590:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 591:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 593:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 594:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #define Timer_Period_Reset__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #define Timer_Period_Reset__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #define Timer_Period_Reset__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #define Timer_Period_Reset__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #define Timer_Period_Reset__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 601:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 602:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 603:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 604:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 605:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 607:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC4/Timer_Period_Reset.c ****     triggerMode &= Timer_Period_Reset_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 18


 610:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is
 611:Generated_Source\PSoC4/Timer_Period_Reset.c ****     
 612:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL &= ((uint8)(~Timer_Period_Reset_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 615:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL |= (triggerMode | Timer_Period_Reset__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 619:Generated_Source\PSoC4/Timer_Period_Reset.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 621:Generated_Source\PSoC4/Timer_Period_Reset.c **** #if (Timer_Period_Reset_EnableTriggerMode)
 622:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 623:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 624:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 625:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_EnableTrigger
 626:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 627:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 628:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 629:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 631:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 632:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 633:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 634:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 635:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 636:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 637:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_EnableTrigger(void) 
 639:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 640:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is
 641:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL |= Timer_Period_Reset_CTRL_TRIG_EN;
 642:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 644:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 645:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 646:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 647:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_DisableTrigger
 648:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 649:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 650:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 651:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 653:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 654:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 655:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 656:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 657:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 658:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 659:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 660:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_DisableTrigger(void) 
 661:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 662:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register i
 663:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL &= ((uint8)(~Timer_Period_Reset_CTRL_TRIG_EN));
 664:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 666:Generated_Source\PSoC4/Timer_Period_Reset.c **** #endif /* Remove API is Trigger Mode is set to None */
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 19


 667:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 668:Generated_Source\PSoC4/Timer_Period_Reset.c **** #if(Timer_Period_Reset_InterruptOnCaptureCount)
 669:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 670:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 671:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 672:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_SetInterruptCount
 673:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 674:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 675:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 676:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 678:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 679:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC4/Timer_Period_Reset.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC4/Timer_Period_Reset.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC4/Timer_Period_Reset.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 684:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 685:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 686:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 687:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 688:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 690:Generated_Source\PSoC4/Timer_Period_Reset.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC4/Timer_Period_Reset.c ****     interruptCount &= Timer_Period_Reset_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 693:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL &= ((uint8)(~Timer_Period_Reset_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC4/Timer_Period_Reset.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC4/Timer_Period_Reset.c ****         Timer_Period_Reset_CONTROL |= interruptCount;
 698:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* (!Timer_Period_Reset_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 700:Generated_Source\PSoC4/Timer_Period_Reset.c **** #endif /* Timer_Period_Reset_InterruptOnCaptureCount */
 701:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 702:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 703:Generated_Source\PSoC4/Timer_Period_Reset.c **** #if (Timer_Period_Reset_UsingHWCaptureCounter)
 704:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 705:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 706:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 707:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_SetCaptureCount
 708:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 709:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 710:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 711:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function sets the capture count
 712:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 713:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 714:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC4/Timer_Period_Reset.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC4/Timer_Period_Reset.c **** *                captures.
 717:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 718:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 719:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 720:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 721:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 722:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 20


 724:Generated_Source\PSoC4/Timer_Period_Reset.c ****     Timer_Period_Reset_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 726:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 727:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 728:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_ReadCaptureCount
 730:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 731:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 732:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 733:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 735:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 736:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 737:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 738:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 739:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 741:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 742:Generated_Source\PSoC4/Timer_Period_Reset.c **** uint8 Timer_Period_Reset_ReadCaptureCount(void) 
 743:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 744:Generated_Source\PSoC4/Timer_Period_Reset.c ****     return ((uint8)Timer_Period_Reset_CAP_COUNT);
 745:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 746:Generated_Source\PSoC4/Timer_Period_Reset.c **** #endif /* Timer_Period_Reset_UsingHWCaptureCounter */
 747:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 748:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 749:Generated_Source\PSoC4/Timer_Period_Reset.c **** /*******************************************************************************
 750:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Function Name: Timer_Period_Reset_ClearFIFO
 751:Generated_Source\PSoC4/Timer_Period_Reset.c **** ********************************************************************************
 752:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 753:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Summary:
 754:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 756:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Parameters:
 757:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 758:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 759:Generated_Source\PSoC4/Timer_Period_Reset.c **** * Return:
 760:Generated_Source\PSoC4/Timer_Period_Reset.c **** *  void
 761:Generated_Source\PSoC4/Timer_Period_Reset.c **** *
 762:Generated_Source\PSoC4/Timer_Period_Reset.c **** *******************************************************************************/
 763:Generated_Source\PSoC4/Timer_Period_Reset.c **** void Timer_Period_Reset_ClearFIFO(void) 
 764:Generated_Source\PSoC4/Timer_Period_Reset.c **** {
 361              		.loc 1 764 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 10B5     		push	{r4, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 765:Generated_Source\PSoC4/Timer_Period_Reset.c ****     while(0u != (Timer_Period_Reset_ReadStatusRegister() & Timer_Period_Reset_STATUS_FIFONEMP))
 369              		.loc 1 765 0
 370 0002 01E0     		b	.L38
 371              	.L39:
 766:Generated_Source\PSoC4/Timer_Period_Reset.c ****     {
 767:Generated_Source\PSoC4/Timer_Period_Reset.c ****         (void)Timer_Period_Reset_ReadCapture();
 372              		.loc 1 767 0
 373 0004 FFF7FEFF 		bl	Timer_Period_Reset_ReadCapture
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 21


 374              	.LVL4:
 375              	.L38:
 765:Generated_Source\PSoC4/Timer_Period_Reset.c ****     while(0u != (Timer_Period_Reset_ReadStatusRegister() & Timer_Period_Reset_STATUS_FIFONEMP))
 376              		.loc 1 765 0
 377 0008 FFF7FEFF 		bl	Timer_Period_Reset_ReadStatusRegister
 378              	.LVL5:
 379 000c 0307     		lsls	r3, r0, #28
 380 000e F9D4     		bmi	.L39
 768:Generated_Source\PSoC4/Timer_Period_Reset.c ****     }
 769:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 381              		.loc 1 769 0
 382              		@ sp needed
 383 0010 10BD     		pop	{r4, pc}
 384              		.cfi_endproc
 385              	.LFE15:
 386              		.size	Timer_Period_Reset_ClearFIFO, .-Timer_Period_Reset_ClearFIFO
 387 0012 C046     		.section	.text.Timer_Period_Reset_Init,"ax",%progbits
 388              		.align	2
 389              		.global	Timer_Period_Reset_Init
 390              		.code	16
 391              		.thumb_func
 392              		.type	Timer_Period_Reset_Init, %function
 393              	Timer_Period_Reset_Init:
 394              	.LFB1:
  44:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #if(!Timer_Period_Reset_UsingFixedFunction)
 395              		.loc 1 44 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399 0000 10B5     		push	{r4, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 4, -8
 402              		.cfi_offset 14, -4
 118:Generated_Source\PSoC4/Timer_Period_Reset.c ****     Timer_Period_Reset_WriteCounter(Timer_Period_Reset_INIT_PERIOD);
 403              		.loc 1 118 0
 404 0002 0420     		movs	r0, #4
 405 0004 FFF7FEFF 		bl	Timer_Period_Reset_WritePeriod
 406              	.LVL6:
 119:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 407              		.loc 1 119 0
 408 0008 0420     		movs	r0, #4
 409 000a FFF7FEFF 		bl	Timer_Period_Reset_WriteCounter
 410              	.LVL7:
 142:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 411              		.loc 1 142 0
 412 000e FFF7FEFF 		bl	CyEnterCriticalSection
 413              	.LVL8:
 145:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 414              		.loc 1 145 0
 415 0012 074A     		ldr	r2, .L41
 416 0014 1178     		ldrb	r1, [r2]
 417 0016 1023     		movs	r3, #16
 418 0018 0B43     		orrs	r3, r1
 419 001a DBB2     		uxtb	r3, r3
 420 001c 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 421              		.loc 1 148 0
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 22


 422 001e FFF7FEFF 		bl	CyExitCriticalSection
 423              	.LVL9:
 159:Generated_Source\PSoC4/Timer_Period_Reset.c ****     #endif /* Configure additional features of UDB implementation */
 424              		.loc 1 159 0
 425 0022 FFF7FEFF 		bl	Timer_Period_Reset_ClearFIFO
 426              	.LVL10:
 162:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 427              		.loc 1 162 0
 428 0026 0120     		movs	r0, #1
 429 0028 FFF7FEFF 		bl	Timer_Period_Reset_SetInterruptMode
 430              	.LVL11:
 163:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 431              		.loc 1 163 0
 432              		@ sp needed
 433 002c 10BD     		pop	{r4, pc}
 434              	.L42:
 435 002e C046     		.align	2
 436              	.L41:
 437 0030 96000F40 		.word	1074725014
 438              		.cfi_endproc
 439              	.LFE1:
 440              		.size	Timer_Period_Reset_Init, .-Timer_Period_Reset_Init
 441              		.section	.text.Timer_Period_Reset_Start,"ax",%progbits
 442              		.align	2
 443              		.global	Timer_Period_Reset_Start
 444              		.code	16
 445              		.thumb_func
 446              		.type	Timer_Period_Reset_Start, %function
 447              	Timer_Period_Reset_Start:
 448              	.LFB3:
 216:Generated_Source\PSoC4/Timer_Period_Reset.c ****     if(Timer_Period_Reset_initVar == 0u)
 449              		.loc 1 216 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 10B5     		push	{r4, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
 456              		.cfi_offset 14, -4
 217:Generated_Source\PSoC4/Timer_Period_Reset.c ****     {
 457              		.loc 1 217 0
 458 0002 064B     		ldr	r3, .L45
 459 0004 1B78     		ldrb	r3, [r3]
 460 0006 002B     		cmp	r3, #0
 461 0008 04D1     		bne	.L44
 219:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 462              		.loc 1 219 0
 463 000a FFF7FEFF 		bl	Timer_Period_Reset_Init
 464              	.LVL12:
 221:Generated_Source\PSoC4/Timer_Period_Reset.c ****     }
 465              		.loc 1 221 0
 466 000e 0122     		movs	r2, #1
 467 0010 024B     		ldr	r3, .L45
 468 0012 1A70     		strb	r2, [r3]
 469              	.L44:
 225:Generated_Source\PSoC4/Timer_Period_Reset.c **** }
 470              		.loc 1 225 0
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 23


 471 0014 FFF7FEFF 		bl	Timer_Period_Reset_Enable
 472              	.LVL13:
 226:Generated_Source\PSoC4/Timer_Period_Reset.c **** 
 473              		.loc 1 226 0
 474              		@ sp needed
 475 0018 10BD     		pop	{r4, pc}
 476              	.L46:
 477 001a C046     		.align	2
 478              	.L45:
 479 001c 00000000 		.word	.LANCHOR0
 480              		.cfi_endproc
 481              	.LFE3:
 482              		.size	Timer_Period_Reset_Start, .-Timer_Period_Reset_Start
 483              		.global	Timer_Period_Reset_initVar
 484              		.bss
 485              		.set	.LANCHOR0,. + 0
 486              		.type	Timer_Period_Reset_initVar, %object
 487              		.size	Timer_Period_Reset_initVar, 1
 488              	Timer_Period_Reset_initVar:
 489 0000 00       		.space	1
 490              		.text
 491              	.Letext0:
 492              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 493              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 494              		.section	.debug_info,"",%progbits
 495              	.Ldebug_info0:
 496 0000 CB020000 		.4byte	0x2cb
 497 0004 0400     		.2byte	0x4
 498 0006 00000000 		.4byte	.Ldebug_abbrev0
 499 000a 04       		.byte	0x4
 500 000b 01       		.uleb128 0x1
 501 000c B5020000 		.4byte	.LASF37
 502 0010 0C       		.byte	0xc
 503 0011 E9000000 		.4byte	.LASF38
 504 0015 3D000000 		.4byte	.LASF39
 505 0019 00000000 		.4byte	.Ldebug_ranges0+0
 506 001d 00000000 		.4byte	0
 507 0021 00000000 		.4byte	.Ldebug_line0
 508 0025 02       		.uleb128 0x2
 509 0026 01       		.byte	0x1
 510 0027 06       		.byte	0x6
 511 0028 0B040000 		.4byte	.LASF0
 512 002c 02       		.uleb128 0x2
 513 002d 01       		.byte	0x1
 514 002e 08       		.byte	0x8
 515 002f 6B010000 		.4byte	.LASF1
 516 0033 02       		.uleb128 0x2
 517 0034 02       		.byte	0x2
 518 0035 05       		.byte	0x5
 519 0036 C7030000 		.4byte	.LASF2
 520 003a 02       		.uleb128 0x2
 521 003b 02       		.byte	0x2
 522 003c 07       		.byte	0x7
 523 003d D6000000 		.4byte	.LASF3
 524 0041 02       		.uleb128 0x2
 525 0042 04       		.byte	0x4
 526 0043 05       		.byte	0x5
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 24


 527 0044 F1030000 		.4byte	.LASF4
 528 0048 02       		.uleb128 0x2
 529 0049 04       		.byte	0x4
 530 004a 07       		.byte	0x7
 531 004b 98010000 		.4byte	.LASF5
 532 004f 02       		.uleb128 0x2
 533 0050 08       		.byte	0x8
 534 0051 05       		.byte	0x5
 535 0052 6E030000 		.4byte	.LASF6
 536 0056 02       		.uleb128 0x2
 537 0057 08       		.byte	0x8
 538 0058 07       		.byte	0x7
 539 0059 54010000 		.4byte	.LASF7
 540 005d 03       		.uleb128 0x3
 541 005e 04       		.byte	0x4
 542 005f 05       		.byte	0x5
 543 0060 696E7400 		.ascii	"int\000"
 544 0064 02       		.uleb128 0x2
 545 0065 04       		.byte	0x4
 546 0066 07       		.byte	0x7
 547 0067 54020000 		.4byte	.LASF8
 548 006b 04       		.uleb128 0x4
 549 006c AA010000 		.4byte	.LASF12
 550 0070 02       		.byte	0x2
 551 0071 FB01     		.2byte	0x1fb
 552 0073 2C000000 		.4byte	0x2c
 553 0077 02       		.uleb128 0x2
 554 0078 04       		.byte	0x4
 555 0079 04       		.byte	0x4
 556 007a C9000000 		.4byte	.LASF9
 557 007e 02       		.uleb128 0x2
 558 007f 08       		.byte	0x8
 559 0080 04       		.byte	0x4
 560 0081 D5010000 		.4byte	.LASF10
 561 0085 02       		.uleb128 0x2
 562 0086 01       		.byte	0x1
 563 0087 08       		.byte	0x8
 564 0088 FA030000 		.4byte	.LASF11
 565 008c 04       		.uleb128 0x4
 566 008d 93010000 		.4byte	.LASF13
 567 0091 02       		.byte	0x2
 568 0092 A502     		.2byte	0x2a5
 569 0094 98000000 		.4byte	0x98
 570 0098 05       		.uleb128 0x5
 571 0099 6B000000 		.4byte	0x6b
 572 009d 02       		.uleb128 0x2
 573 009e 08       		.byte	0x8
 574 009f 04       		.byte	0x4
 575 00a0 FF030000 		.4byte	.LASF14
 576 00a4 02       		.uleb128 0x2
 577 00a5 04       		.byte	0x4
 578 00a6 07       		.byte	0x7
 579 00a7 43030000 		.4byte	.LASF15
 580 00ab 06       		.uleb128 0x6
 581 00ac 79010000 		.4byte	.LASF16
 582 00b0 01       		.byte	0x1
 583 00b1 B4       		.byte	0xb4
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 25


 584 00b2 00000000 		.4byte	.LFB2
 585 00b6 14000000 		.4byte	.LFE2-.LFB2
 586 00ba 01       		.uleb128 0x1
 587 00bb 9C       		.byte	0x9c
 588 00bc 06       		.uleb128 0x6
 589 00bd 77020000 		.4byte	.LASF17
 590 00c1 01       		.byte	0x1
 591 00c2 F7       		.byte	0xf7
 592 00c3 00000000 		.4byte	.LFB4
 593 00c7 10000000 		.4byte	.LFE4-.LFB4
 594 00cb 01       		.uleb128 0x1
 595 00cc 9C       		.byte	0x9c
 596 00cd 07       		.uleb128 0x7
 597 00ce A3030000 		.4byte	.LASF21
 598 00d2 01       		.byte	0x1
 599 00d3 1701     		.2byte	0x117
 600 00d5 00000000 		.4byte	.LFB5
 601 00d9 0C000000 		.4byte	.LFE5-.LFB5
 602 00dd 01       		.uleb128 0x1
 603 00de 9C       		.byte	0x9c
 604 00df F2000000 		.4byte	0xf2
 605 00e3 08       		.uleb128 0x8
 606 00e4 95030000 		.4byte	.LASF23
 607 00e8 01       		.byte	0x1
 608 00e9 1701     		.2byte	0x117
 609 00eb 6B000000 		.4byte	0x6b
 610 00ef 01       		.uleb128 0x1
 611 00f0 50       		.byte	0x50
 612 00f1 00       		.byte	0
 613 00f2 09       		.uleb128 0x9
 614 00f3 17040000 		.4byte	.LASF18
 615 00f7 01       		.byte	0x1
 616 00f8 2E01     		.2byte	0x12e
 617 00fa 00000000 		.4byte	.LFB6
 618 00fe 0C000000 		.4byte	.LFE6-.LFB6
 619 0102 01       		.uleb128 0x1
 620 0103 9C       		.byte	0x9c
 621 0104 0A       		.uleb128 0xa
 622 0105 8F020000 		.4byte	.LASF19
 623 0109 01       		.byte	0x1
 624 010a 4D01     		.2byte	0x14d
 625 010c 6B000000 		.4byte	0x6b
 626 0110 00000000 		.4byte	.LFB7
 627 0114 0C000000 		.4byte	.LFE7-.LFB7
 628 0118 01       		.uleb128 0x1
 629 0119 9C       		.byte	0x9c
 630 011a 0A       		.uleb128 0xa
 631 011b FB010000 		.4byte	.LASF20
 632 011f 01       		.byte	0x1
 633 0120 6401     		.2byte	0x164
 634 0122 6B000000 		.4byte	0x6b
 635 0126 00000000 		.4byte	.LFB8
 636 012a 0C000000 		.4byte	.LFE8-.LFB8
 637 012e 01       		.uleb128 0x1
 638 012f 9C       		.byte	0x9c
 639 0130 07       		.uleb128 0x7
 640 0131 A1000000 		.4byte	.LASF22
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 26


 641 0135 01       		.byte	0x1
 642 0136 7B01     		.2byte	0x17b
 643 0138 00000000 		.4byte	.LFB9
 644 013c 0C000000 		.4byte	.LFE9-.LFB9
 645 0140 01       		.uleb128 0x1
 646 0141 9C       		.byte	0x9c
 647 0142 55010000 		.4byte	0x155
 648 0146 08       		.uleb128 0x8
 649 0147 B0010000 		.4byte	.LASF24
 650 014b 01       		.byte	0x1
 651 014c 7B01     		.2byte	0x17b
 652 014e 6B000000 		.4byte	0x6b
 653 0152 01       		.uleb128 0x1
 654 0153 50       		.byte	0x50
 655 0154 00       		.byte	0
 656 0155 0A       		.uleb128 0xa
 657 0156 1F000000 		.4byte	.LASF25
 658 015a 01       		.byte	0x1
 659 015b 9501     		.2byte	0x195
 660 015d 6B000000 		.4byte	0x6b
 661 0161 00000000 		.4byte	.LFB10
 662 0165 0C000000 		.4byte	.LFE10-.LFB10
 663 0169 01       		.uleb128 0x1
 664 016a 9C       		.byte	0x9c
 665 016b 07       		.uleb128 0x7
 666 016c DC010000 		.4byte	.LASF26
 667 0170 01       		.byte	0x1
 668 0171 AF01     		.2byte	0x1af
 669 0173 00000000 		.4byte	.LFB11
 670 0177 0C000000 		.4byte	.LFE11-.LFB11
 671 017b 01       		.uleb128 0x1
 672 017c 9C       		.byte	0x9c
 673 017d 90010000 		.4byte	0x190
 674 0181 08       		.uleb128 0x8
 675 0182 CF000000 		.4byte	.LASF27
 676 0186 01       		.byte	0x1
 677 0187 AF01     		.2byte	0x1af
 678 0189 6B000000 		.4byte	0x6b
 679 018d 01       		.uleb128 0x1
 680 018e 50       		.byte	0x50
 681 018f 00       		.byte	0
 682 0190 0A       		.uleb128 0xa
 683 0191 00000000 		.4byte	.LASF28
 684 0195 01       		.byte	0x1
 685 0196 C801     		.2byte	0x1c8
 686 0198 6B000000 		.4byte	0x6b
 687 019c 00000000 		.4byte	.LFB12
 688 01a0 0C000000 		.4byte	.LFE12-.LFB12
 689 01a4 01       		.uleb128 0x1
 690 01a5 9C       		.byte	0x9c
 691 01a6 07       		.uleb128 0x7
 692 01a7 D1030000 		.4byte	.LASF29
 693 01ab 01       		.byte	0x1
 694 01ac E001     		.2byte	0x1e0
 695 01ae 00000000 		.4byte	.LFB13
 696 01b2 0C000000 		.4byte	.LFE13-.LFB13
 697 01b6 01       		.uleb128 0x1
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 27


 698 01b7 9C       		.byte	0x9c
 699 01b8 CB010000 		.4byte	0x1cb
 700 01bc 08       		.uleb128 0x8
 701 01bd 4C010000 		.4byte	.LASF30
 702 01c1 01       		.byte	0x1
 703 01c2 E001     		.2byte	0x1e0
 704 01c4 6B000000 		.4byte	0x6b
 705 01c8 01       		.uleb128 0x1
 706 01c9 50       		.byte	0x50
 707 01ca 00       		.byte	0
 708 01cb 0A       		.uleb128 0xa
 709 01cc 15010000 		.4byte	.LASF31
 710 01d0 01       		.byte	0x1
 711 01d1 FC01     		.2byte	0x1fc
 712 01d3 6B000000 		.4byte	0x6b
 713 01d7 00000000 		.4byte	.LFB14
 714 01db 14000000 		.4byte	.LFE14-.LFB14
 715 01df 01       		.uleb128 0x1
 716 01e0 9C       		.byte	0x9c
 717 01e1 07       		.uleb128 0x7
 718 01e2 B8010000 		.4byte	.LASF32
 719 01e6 01       		.byte	0x1
 720 01e7 FB02     		.2byte	0x2fb
 721 01e9 00000000 		.4byte	.LFB15
 722 01ed 12000000 		.4byte	.LFE15-.LFB15
 723 01f1 01       		.uleb128 0x1
 724 01f2 9C       		.byte	0x9c
 725 01f3 0A020000 		.4byte	0x20a
 726 01f7 0B       		.uleb128 0xb
 727 01f8 08000000 		.4byte	.LVL4
 728 01fc 90010000 		.4byte	0x190
 729 0200 0B       		.uleb128 0xb
 730 0201 0C000000 		.4byte	.LVL5
 731 0205 04010000 		.4byte	0x104
 732 0209 00       		.byte	0
 733 020a 0C       		.uleb128 0xc
 734 020b 34010000 		.4byte	.LASF33
 735 020f 01       		.byte	0x1
 736 0210 2B       		.byte	0x2b
 737 0211 00000000 		.4byte	.LFB1
 738 0215 34000000 		.4byte	.LFE1-.LFB1
 739 0219 01       		.uleb128 0x1
 740 021a 9C       		.byte	0x9c
 741 021b 7F020000 		.4byte	0x27f
 742 021f 0D       		.uleb128 0xd
 743 0220 4C030000 		.4byte	.LASF40
 744 0224 01       		.byte	0x1
 745 0225 2F       		.byte	0x2f
 746 0226 6B000000 		.4byte	0x6b
 747 022a 00000000 		.4byte	.LLST0
 748 022e 0E       		.uleb128 0xe
 749 022f 08000000 		.4byte	.LVL6
 750 0233 6B010000 		.4byte	0x16b
 751 0237 41020000 		.4byte	0x241
 752 023b 0F       		.uleb128 0xf
 753 023c 01       		.uleb128 0x1
 754 023d 50       		.byte	0x50
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 28


 755 023e 01       		.uleb128 0x1
 756 023f 34       		.byte	0x34
 757 0240 00       		.byte	0
 758 0241 0E       		.uleb128 0xe
 759 0242 0E000000 		.4byte	.LVL7
 760 0246 A6010000 		.4byte	0x1a6
 761 024a 54020000 		.4byte	0x254
 762 024e 0F       		.uleb128 0xf
 763 024f 01       		.uleb128 0x1
 764 0250 50       		.byte	0x50
 765 0251 01       		.uleb128 0x1
 766 0252 34       		.byte	0x34
 767 0253 00       		.byte	0
 768 0254 0B       		.uleb128 0xb
 769 0255 12000000 		.4byte	.LVL8
 770 0259 B8020000 		.4byte	0x2b8
 771 025d 0B       		.uleb128 0xb
 772 025e 22000000 		.4byte	.LVL9
 773 0262 C3020000 		.4byte	0x2c3
 774 0266 0B       		.uleb128 0xb
 775 0267 26000000 		.4byte	.LVL10
 776 026b E1010000 		.4byte	0x1e1
 777 026f 10       		.uleb128 0x10
 778 0270 2C000000 		.4byte	.LVL11
 779 0274 CD000000 		.4byte	0xcd
 780 0278 0F       		.uleb128 0xf
 781 0279 01       		.uleb128 0x1
 782 027a 50       		.byte	0x50
 783 027b 01       		.uleb128 0x1
 784 027c 31       		.byte	0x31
 785 027d 00       		.byte	0
 786 027e 00       		.byte	0
 787 027f 0C       		.uleb128 0xc
 788 0280 7C030000 		.4byte	.LASF34
 789 0284 01       		.byte	0x1
 790 0285 D7       		.byte	0xd7
 791 0286 00000000 		.4byte	.LFB3
 792 028a 20000000 		.4byte	.LFE3-.LFB3
 793 028e 01       		.uleb128 0x1
 794 028f 9C       		.byte	0x9c
 795 0290 A7020000 		.4byte	0x2a7
 796 0294 0B       		.uleb128 0xb
 797 0295 0E000000 		.4byte	.LVL12
 798 0299 0A020000 		.4byte	0x20a
 799 029d 0B       		.uleb128 0xb
 800 029e 18000000 		.4byte	.LVL13
 801 02a2 AB000000 		.4byte	0xab
 802 02a6 00       		.byte	0
 803 02a7 11       		.uleb128 0x11
 804 02a8 39020000 		.4byte	.LASF41
 805 02ac 01       		.byte	0x1
 806 02ad 1A       		.byte	0x1a
 807 02ae 6B000000 		.4byte	0x6b
 808 02b2 05       		.uleb128 0x5
 809 02b3 03       		.byte	0x3
 810 02b4 00000000 		.4byte	Timer_Period_Reset_initVar
 811 02b8 12       		.uleb128 0x12
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 29


 812 02b9 22020000 		.4byte	.LASF35
 813 02bd 22020000 		.4byte	.LASF35
 814 02c1 03       		.byte	0x3
 815 02c2 F8       		.byte	0xf8
 816 02c3 12       		.uleb128 0x12
 817 02c4 61020000 		.4byte	.LASF36
 818 02c8 61020000 		.4byte	.LASF36
 819 02cc 03       		.byte	0x3
 820 02cd F9       		.byte	0xf9
 821 02ce 00       		.byte	0
 822              		.section	.debug_abbrev,"",%progbits
 823              	.Ldebug_abbrev0:
 824 0000 01       		.uleb128 0x1
 825 0001 11       		.uleb128 0x11
 826 0002 01       		.byte	0x1
 827 0003 25       		.uleb128 0x25
 828 0004 0E       		.uleb128 0xe
 829 0005 13       		.uleb128 0x13
 830 0006 0B       		.uleb128 0xb
 831 0007 03       		.uleb128 0x3
 832 0008 0E       		.uleb128 0xe
 833 0009 1B       		.uleb128 0x1b
 834 000a 0E       		.uleb128 0xe
 835 000b 55       		.uleb128 0x55
 836 000c 17       		.uleb128 0x17
 837 000d 11       		.uleb128 0x11
 838 000e 01       		.uleb128 0x1
 839 000f 10       		.uleb128 0x10
 840 0010 17       		.uleb128 0x17
 841 0011 00       		.byte	0
 842 0012 00       		.byte	0
 843 0013 02       		.uleb128 0x2
 844 0014 24       		.uleb128 0x24
 845 0015 00       		.byte	0
 846 0016 0B       		.uleb128 0xb
 847 0017 0B       		.uleb128 0xb
 848 0018 3E       		.uleb128 0x3e
 849 0019 0B       		.uleb128 0xb
 850 001a 03       		.uleb128 0x3
 851 001b 0E       		.uleb128 0xe
 852 001c 00       		.byte	0
 853 001d 00       		.byte	0
 854 001e 03       		.uleb128 0x3
 855 001f 24       		.uleb128 0x24
 856 0020 00       		.byte	0
 857 0021 0B       		.uleb128 0xb
 858 0022 0B       		.uleb128 0xb
 859 0023 3E       		.uleb128 0x3e
 860 0024 0B       		.uleb128 0xb
 861 0025 03       		.uleb128 0x3
 862 0026 08       		.uleb128 0x8
 863 0027 00       		.byte	0
 864 0028 00       		.byte	0
 865 0029 04       		.uleb128 0x4
 866 002a 16       		.uleb128 0x16
 867 002b 00       		.byte	0
 868 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 30


 869 002d 0E       		.uleb128 0xe
 870 002e 3A       		.uleb128 0x3a
 871 002f 0B       		.uleb128 0xb
 872 0030 3B       		.uleb128 0x3b
 873 0031 05       		.uleb128 0x5
 874 0032 49       		.uleb128 0x49
 875 0033 13       		.uleb128 0x13
 876 0034 00       		.byte	0
 877 0035 00       		.byte	0
 878 0036 05       		.uleb128 0x5
 879 0037 35       		.uleb128 0x35
 880 0038 00       		.byte	0
 881 0039 49       		.uleb128 0x49
 882 003a 13       		.uleb128 0x13
 883 003b 00       		.byte	0
 884 003c 00       		.byte	0
 885 003d 06       		.uleb128 0x6
 886 003e 2E       		.uleb128 0x2e
 887 003f 00       		.byte	0
 888 0040 3F       		.uleb128 0x3f
 889 0041 19       		.uleb128 0x19
 890 0042 03       		.uleb128 0x3
 891 0043 0E       		.uleb128 0xe
 892 0044 3A       		.uleb128 0x3a
 893 0045 0B       		.uleb128 0xb
 894 0046 3B       		.uleb128 0x3b
 895 0047 0B       		.uleb128 0xb
 896 0048 27       		.uleb128 0x27
 897 0049 19       		.uleb128 0x19
 898 004a 11       		.uleb128 0x11
 899 004b 01       		.uleb128 0x1
 900 004c 12       		.uleb128 0x12
 901 004d 06       		.uleb128 0x6
 902 004e 40       		.uleb128 0x40
 903 004f 18       		.uleb128 0x18
 904 0050 9742     		.uleb128 0x2117
 905 0052 19       		.uleb128 0x19
 906 0053 00       		.byte	0
 907 0054 00       		.byte	0
 908 0055 07       		.uleb128 0x7
 909 0056 2E       		.uleb128 0x2e
 910 0057 01       		.byte	0x1
 911 0058 3F       		.uleb128 0x3f
 912 0059 19       		.uleb128 0x19
 913 005a 03       		.uleb128 0x3
 914 005b 0E       		.uleb128 0xe
 915 005c 3A       		.uleb128 0x3a
 916 005d 0B       		.uleb128 0xb
 917 005e 3B       		.uleb128 0x3b
 918 005f 05       		.uleb128 0x5
 919 0060 27       		.uleb128 0x27
 920 0061 19       		.uleb128 0x19
 921 0062 11       		.uleb128 0x11
 922 0063 01       		.uleb128 0x1
 923 0064 12       		.uleb128 0x12
 924 0065 06       		.uleb128 0x6
 925 0066 40       		.uleb128 0x40
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 31


 926 0067 18       		.uleb128 0x18
 927 0068 9742     		.uleb128 0x2117
 928 006a 19       		.uleb128 0x19
 929 006b 01       		.uleb128 0x1
 930 006c 13       		.uleb128 0x13
 931 006d 00       		.byte	0
 932 006e 00       		.byte	0
 933 006f 08       		.uleb128 0x8
 934 0070 05       		.uleb128 0x5
 935 0071 00       		.byte	0
 936 0072 03       		.uleb128 0x3
 937 0073 0E       		.uleb128 0xe
 938 0074 3A       		.uleb128 0x3a
 939 0075 0B       		.uleb128 0xb
 940 0076 3B       		.uleb128 0x3b
 941 0077 05       		.uleb128 0x5
 942 0078 49       		.uleb128 0x49
 943 0079 13       		.uleb128 0x13
 944 007a 02       		.uleb128 0x2
 945 007b 18       		.uleb128 0x18
 946 007c 00       		.byte	0
 947 007d 00       		.byte	0
 948 007e 09       		.uleb128 0x9
 949 007f 2E       		.uleb128 0x2e
 950 0080 00       		.byte	0
 951 0081 3F       		.uleb128 0x3f
 952 0082 19       		.uleb128 0x19
 953 0083 03       		.uleb128 0x3
 954 0084 0E       		.uleb128 0xe
 955 0085 3A       		.uleb128 0x3a
 956 0086 0B       		.uleb128 0xb
 957 0087 3B       		.uleb128 0x3b
 958 0088 05       		.uleb128 0x5
 959 0089 27       		.uleb128 0x27
 960 008a 19       		.uleb128 0x19
 961 008b 11       		.uleb128 0x11
 962 008c 01       		.uleb128 0x1
 963 008d 12       		.uleb128 0x12
 964 008e 06       		.uleb128 0x6
 965 008f 40       		.uleb128 0x40
 966 0090 18       		.uleb128 0x18
 967 0091 9742     		.uleb128 0x2117
 968 0093 19       		.uleb128 0x19
 969 0094 00       		.byte	0
 970 0095 00       		.byte	0
 971 0096 0A       		.uleb128 0xa
 972 0097 2E       		.uleb128 0x2e
 973 0098 00       		.byte	0
 974 0099 3F       		.uleb128 0x3f
 975 009a 19       		.uleb128 0x19
 976 009b 03       		.uleb128 0x3
 977 009c 0E       		.uleb128 0xe
 978 009d 3A       		.uleb128 0x3a
 979 009e 0B       		.uleb128 0xb
 980 009f 3B       		.uleb128 0x3b
 981 00a0 05       		.uleb128 0x5
 982 00a1 27       		.uleb128 0x27
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 32


 983 00a2 19       		.uleb128 0x19
 984 00a3 49       		.uleb128 0x49
 985 00a4 13       		.uleb128 0x13
 986 00a5 11       		.uleb128 0x11
 987 00a6 01       		.uleb128 0x1
 988 00a7 12       		.uleb128 0x12
 989 00a8 06       		.uleb128 0x6
 990 00a9 40       		.uleb128 0x40
 991 00aa 18       		.uleb128 0x18
 992 00ab 9742     		.uleb128 0x2117
 993 00ad 19       		.uleb128 0x19
 994 00ae 00       		.byte	0
 995 00af 00       		.byte	0
 996 00b0 0B       		.uleb128 0xb
 997 00b1 898201   		.uleb128 0x4109
 998 00b4 00       		.byte	0
 999 00b5 11       		.uleb128 0x11
 1000 00b6 01       		.uleb128 0x1
 1001 00b7 31       		.uleb128 0x31
 1002 00b8 13       		.uleb128 0x13
 1003 00b9 00       		.byte	0
 1004 00ba 00       		.byte	0
 1005 00bb 0C       		.uleb128 0xc
 1006 00bc 2E       		.uleb128 0x2e
 1007 00bd 01       		.byte	0x1
 1008 00be 3F       		.uleb128 0x3f
 1009 00bf 19       		.uleb128 0x19
 1010 00c0 03       		.uleb128 0x3
 1011 00c1 0E       		.uleb128 0xe
 1012 00c2 3A       		.uleb128 0x3a
 1013 00c3 0B       		.uleb128 0xb
 1014 00c4 3B       		.uleb128 0x3b
 1015 00c5 0B       		.uleb128 0xb
 1016 00c6 27       		.uleb128 0x27
 1017 00c7 19       		.uleb128 0x19
 1018 00c8 11       		.uleb128 0x11
 1019 00c9 01       		.uleb128 0x1
 1020 00ca 12       		.uleb128 0x12
 1021 00cb 06       		.uleb128 0x6
 1022 00cc 40       		.uleb128 0x40
 1023 00cd 18       		.uleb128 0x18
 1024 00ce 9742     		.uleb128 0x2117
 1025 00d0 19       		.uleb128 0x19
 1026 00d1 01       		.uleb128 0x1
 1027 00d2 13       		.uleb128 0x13
 1028 00d3 00       		.byte	0
 1029 00d4 00       		.byte	0
 1030 00d5 0D       		.uleb128 0xd
 1031 00d6 34       		.uleb128 0x34
 1032 00d7 00       		.byte	0
 1033 00d8 03       		.uleb128 0x3
 1034 00d9 0E       		.uleb128 0xe
 1035 00da 3A       		.uleb128 0x3a
 1036 00db 0B       		.uleb128 0xb
 1037 00dc 3B       		.uleb128 0x3b
 1038 00dd 0B       		.uleb128 0xb
 1039 00de 49       		.uleb128 0x49
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 33


 1040 00df 13       		.uleb128 0x13
 1041 00e0 02       		.uleb128 0x2
 1042 00e1 17       		.uleb128 0x17
 1043 00e2 00       		.byte	0
 1044 00e3 00       		.byte	0
 1045 00e4 0E       		.uleb128 0xe
 1046 00e5 898201   		.uleb128 0x4109
 1047 00e8 01       		.byte	0x1
 1048 00e9 11       		.uleb128 0x11
 1049 00ea 01       		.uleb128 0x1
 1050 00eb 31       		.uleb128 0x31
 1051 00ec 13       		.uleb128 0x13
 1052 00ed 01       		.uleb128 0x1
 1053 00ee 13       		.uleb128 0x13
 1054 00ef 00       		.byte	0
 1055 00f0 00       		.byte	0
 1056 00f1 0F       		.uleb128 0xf
 1057 00f2 8A8201   		.uleb128 0x410a
 1058 00f5 00       		.byte	0
 1059 00f6 02       		.uleb128 0x2
 1060 00f7 18       		.uleb128 0x18
 1061 00f8 9142     		.uleb128 0x2111
 1062 00fa 18       		.uleb128 0x18
 1063 00fb 00       		.byte	0
 1064 00fc 00       		.byte	0
 1065 00fd 10       		.uleb128 0x10
 1066 00fe 898201   		.uleb128 0x4109
 1067 0101 01       		.byte	0x1
 1068 0102 11       		.uleb128 0x11
 1069 0103 01       		.uleb128 0x1
 1070 0104 31       		.uleb128 0x31
 1071 0105 13       		.uleb128 0x13
 1072 0106 00       		.byte	0
 1073 0107 00       		.byte	0
 1074 0108 11       		.uleb128 0x11
 1075 0109 34       		.uleb128 0x34
 1076 010a 00       		.byte	0
 1077 010b 03       		.uleb128 0x3
 1078 010c 0E       		.uleb128 0xe
 1079 010d 3A       		.uleb128 0x3a
 1080 010e 0B       		.uleb128 0xb
 1081 010f 3B       		.uleb128 0x3b
 1082 0110 0B       		.uleb128 0xb
 1083 0111 49       		.uleb128 0x49
 1084 0112 13       		.uleb128 0x13
 1085 0113 3F       		.uleb128 0x3f
 1086 0114 19       		.uleb128 0x19
 1087 0115 02       		.uleb128 0x2
 1088 0116 18       		.uleb128 0x18
 1089 0117 00       		.byte	0
 1090 0118 00       		.byte	0
 1091 0119 12       		.uleb128 0x12
 1092 011a 2E       		.uleb128 0x2e
 1093 011b 00       		.byte	0
 1094 011c 3F       		.uleb128 0x3f
 1095 011d 19       		.uleb128 0x19
 1096 011e 3C       		.uleb128 0x3c
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 34


 1097 011f 19       		.uleb128 0x19
 1098 0120 6E       		.uleb128 0x6e
 1099 0121 0E       		.uleb128 0xe
 1100 0122 03       		.uleb128 0x3
 1101 0123 0E       		.uleb128 0xe
 1102 0124 3A       		.uleb128 0x3a
 1103 0125 0B       		.uleb128 0xb
 1104 0126 3B       		.uleb128 0x3b
 1105 0127 0B       		.uleb128 0xb
 1106 0128 00       		.byte	0
 1107 0129 00       		.byte	0
 1108 012a 00       		.byte	0
 1109              		.section	.debug_loc,"",%progbits
 1110              	.Ldebug_loc0:
 1111              	.LLST0:
 1112 0000 12000000 		.4byte	.LVL8
 1113 0004 21000000 		.4byte	.LVL9-1
 1114 0008 0100     		.2byte	0x1
 1115 000a 50       		.byte	0x50
 1116 000b 00000000 		.4byte	0
 1117 000f 00000000 		.4byte	0
 1118              		.section	.debug_aranges,"",%progbits
 1119 0000 8C000000 		.4byte	0x8c
 1120 0004 0200     		.2byte	0x2
 1121 0006 00000000 		.4byte	.Ldebug_info0
 1122 000a 04       		.byte	0x4
 1123 000b 00       		.byte	0
 1124 000c 0000     		.2byte	0
 1125 000e 0000     		.2byte	0
 1126 0010 00000000 		.4byte	.LFB2
 1127 0014 14000000 		.4byte	.LFE2-.LFB2
 1128 0018 00000000 		.4byte	.LFB4
 1129 001c 10000000 		.4byte	.LFE4-.LFB4
 1130 0020 00000000 		.4byte	.LFB5
 1131 0024 0C000000 		.4byte	.LFE5-.LFB5
 1132 0028 00000000 		.4byte	.LFB6
 1133 002c 0C000000 		.4byte	.LFE6-.LFB6
 1134 0030 00000000 		.4byte	.LFB7
 1135 0034 0C000000 		.4byte	.LFE7-.LFB7
 1136 0038 00000000 		.4byte	.LFB8
 1137 003c 0C000000 		.4byte	.LFE8-.LFB8
 1138 0040 00000000 		.4byte	.LFB9
 1139 0044 0C000000 		.4byte	.LFE9-.LFB9
 1140 0048 00000000 		.4byte	.LFB10
 1141 004c 0C000000 		.4byte	.LFE10-.LFB10
 1142 0050 00000000 		.4byte	.LFB11
 1143 0054 0C000000 		.4byte	.LFE11-.LFB11
 1144 0058 00000000 		.4byte	.LFB12
 1145 005c 0C000000 		.4byte	.LFE12-.LFB12
 1146 0060 00000000 		.4byte	.LFB13
 1147 0064 0C000000 		.4byte	.LFE13-.LFB13
 1148 0068 00000000 		.4byte	.LFB14
 1149 006c 14000000 		.4byte	.LFE14-.LFB14
 1150 0070 00000000 		.4byte	.LFB15
 1151 0074 12000000 		.4byte	.LFE15-.LFB15
 1152 0078 00000000 		.4byte	.LFB1
 1153 007c 34000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 35


 1154 0080 00000000 		.4byte	.LFB3
 1155 0084 20000000 		.4byte	.LFE3-.LFB3
 1156 0088 00000000 		.4byte	0
 1157 008c 00000000 		.4byte	0
 1158              		.section	.debug_ranges,"",%progbits
 1159              	.Ldebug_ranges0:
 1160 0000 00000000 		.4byte	.LFB2
 1161 0004 14000000 		.4byte	.LFE2
 1162 0008 00000000 		.4byte	.LFB4
 1163 000c 10000000 		.4byte	.LFE4
 1164 0010 00000000 		.4byte	.LFB5
 1165 0014 0C000000 		.4byte	.LFE5
 1166 0018 00000000 		.4byte	.LFB6
 1167 001c 0C000000 		.4byte	.LFE6
 1168 0020 00000000 		.4byte	.LFB7
 1169 0024 0C000000 		.4byte	.LFE7
 1170 0028 00000000 		.4byte	.LFB8
 1171 002c 0C000000 		.4byte	.LFE8
 1172 0030 00000000 		.4byte	.LFB9
 1173 0034 0C000000 		.4byte	.LFE9
 1174 0038 00000000 		.4byte	.LFB10
 1175 003c 0C000000 		.4byte	.LFE10
 1176 0040 00000000 		.4byte	.LFB11
 1177 0044 0C000000 		.4byte	.LFE11
 1178 0048 00000000 		.4byte	.LFB12
 1179 004c 0C000000 		.4byte	.LFE12
 1180 0050 00000000 		.4byte	.LFB13
 1181 0054 0C000000 		.4byte	.LFE13
 1182 0058 00000000 		.4byte	.LFB14
 1183 005c 14000000 		.4byte	.LFE14
 1184 0060 00000000 		.4byte	.LFB15
 1185 0064 12000000 		.4byte	.LFE15
 1186 0068 00000000 		.4byte	.LFB1
 1187 006c 34000000 		.4byte	.LFE1
 1188 0070 00000000 		.4byte	.LFB3
 1189 0074 20000000 		.4byte	.LFE3
 1190 0078 00000000 		.4byte	0
 1191 007c 00000000 		.4byte	0
 1192              		.section	.debug_line,"",%progbits
 1193              	.Ldebug_line0:
 1194 0000 82010000 		.section	.debug_str,"MS",%progbits,1
 1194      02005A00 
 1194      00000201 
 1194      FB0E0D00 
 1194      01010101 
 1195              	.LASF28:
 1196 0000 54696D65 		.ascii	"Timer_Period_Reset_ReadCapture\000"
 1196      725F5065 
 1196      72696F64 
 1196      5F526573 
 1196      65745F52 
 1197              	.LASF25:
 1198 001f 54696D65 		.ascii	"Timer_Period_Reset_ReadPeriod\000"
 1198      725F5065 
 1198      72696F64 
 1198      5F526573 
 1198      65745F52 
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 36


 1199              	.LASF39:
 1200 003d 433A5C55 		.ascii	"C:\\Users\\M4rz4n\\Desktop\\Husky Robotics\\Firmwar"
 1200      73657273 
 1200      5C4D3472 
 1200      7A346E5C 
 1200      4465736B 
 1201 006b 655C424C 		.ascii	"e\\BLDC\\BLDC_Motor_Board_PY2023\\BLDC_Motor_Board."
 1201      44435C42 
 1201      4C44435F 
 1201      4D6F746F 
 1201      725F426F 
 1202 009b 63796473 		.ascii	"cydsn\000"
 1202      6E00
 1203              	.LASF22:
 1204 00a1 54696D65 		.ascii	"Timer_Period_Reset_WriteControlRegister\000"
 1204      725F5065 
 1204      72696F64 
 1204      5F526573 
 1204      65745F57 
 1205              	.LASF9:
 1206 00c9 666C6F61 		.ascii	"float\000"
 1206      7400
 1207              	.LASF27:
 1208 00cf 70657269 		.ascii	"period\000"
 1208      6F6400
 1209              	.LASF3:
 1210 00d6 73686F72 		.ascii	"short unsigned int\000"
 1210      7420756E 
 1210      7369676E 
 1210      65642069 
 1210      6E7400
 1211              	.LASF38:
 1212 00e9 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer_Period_Reset.c\000"
 1212      72617465 
 1212      645F536F 
 1212      75726365 
 1212      5C50536F 
 1213              	.LASF31:
 1214 0115 54696D65 		.ascii	"Timer_Period_Reset_ReadCounter\000"
 1214      725F5065 
 1214      72696F64 
 1214      5F526573 
 1214      65745F52 
 1215              	.LASF33:
 1216 0134 54696D65 		.ascii	"Timer_Period_Reset_Init\000"
 1216      725F5065 
 1216      72696F64 
 1216      5F526573 
 1216      65745F49 
 1217              	.LASF30:
 1218 014c 636F756E 		.ascii	"counter\000"
 1218      74657200 
 1219              	.LASF7:
 1220 0154 6C6F6E67 		.ascii	"long long unsigned int\000"
 1220      206C6F6E 
 1220      6720756E 
 1220      7369676E 
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 37


 1220      65642069 
 1221              	.LASF1:
 1222 016b 756E7369 		.ascii	"unsigned char\000"
 1222      676E6564 
 1222      20636861 
 1222      7200
 1223              	.LASF16:
 1224 0179 54696D65 		.ascii	"Timer_Period_Reset_Enable\000"
 1224      725F5065 
 1224      72696F64 
 1224      5F526573 
 1224      65745F45 
 1225              	.LASF13:
 1226 0193 72656738 		.ascii	"reg8\000"
 1226      00
 1227              	.LASF5:
 1228 0198 6C6F6E67 		.ascii	"long unsigned int\000"
 1228      20756E73 
 1228      69676E65 
 1228      6420696E 
 1228      7400
 1229              	.LASF12:
 1230 01aa 75696E74 		.ascii	"uint8\000"
 1230      3800
 1231              	.LASF24:
 1232 01b0 636F6E74 		.ascii	"control\000"
 1232      726F6C00 
 1233              	.LASF32:
 1234 01b8 54696D65 		.ascii	"Timer_Period_Reset_ClearFIFO\000"
 1234      725F5065 
 1234      72696F64 
 1234      5F526573 
 1234      65745F43 
 1235              	.LASF10:
 1236 01d5 646F7562 		.ascii	"double\000"
 1236      6C6500
 1237              	.LASF26:
 1238 01dc 54696D65 		.ascii	"Timer_Period_Reset_WritePeriod\000"
 1238      725F5065 
 1238      72696F64 
 1238      5F526573 
 1238      65745F57 
 1239              	.LASF20:
 1240 01fb 54696D65 		.ascii	"Timer_Period_Reset_ReadControlRegister\000"
 1240      725F5065 
 1240      72696F64 
 1240      5F526573 
 1240      65745F52 
 1241              	.LASF35:
 1242 0222 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1242      74657243 
 1242      72697469 
 1242      63616C53 
 1242      65637469 
 1243              	.LASF41:
 1244 0239 54696D65 		.ascii	"Timer_Period_Reset_initVar\000"
 1244      725F5065 
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 38


 1244      72696F64 
 1244      5F526573 
 1244      65745F69 
 1245              	.LASF8:
 1246 0254 756E7369 		.ascii	"unsigned int\000"
 1246      676E6564 
 1246      20696E74 
 1246      00
 1247              	.LASF36:
 1248 0261 43794578 		.ascii	"CyExitCriticalSection\000"
 1248      69744372 
 1248      69746963 
 1248      616C5365 
 1248      6374696F 
 1249              	.LASF17:
 1250 0277 54696D65 		.ascii	"Timer_Period_Reset_Stop\000"
 1250      725F5065 
 1250      72696F64 
 1250      5F526573 
 1250      65745F53 
 1251              	.LASF19:
 1252 028f 54696D65 		.ascii	"Timer_Period_Reset_ReadStatusRegister\000"
 1252      725F5065 
 1252      72696F64 
 1252      5F526573 
 1252      65745F52 
 1253              	.LASF37:
 1254 02b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1254      43313120 
 1254      352E342E 
 1254      31203230 
 1254      31363036 
 1255 02e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1255      20726576 
 1255      6973696F 
 1255      6E203233 
 1255      37373135 
 1256 031b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1256      66756E63 
 1256      74696F6E 
 1256      2D736563 
 1256      74696F6E 
 1257              	.LASF15:
 1258 0343 73697A65 		.ascii	"sizetype\000"
 1258      74797065 
 1258      00
 1259              	.LASF40:
 1260 034c 54696D65 		.ascii	"Timer_Period_Reset_interruptState\000"
 1260      725F5065 
 1260      72696F64 
 1260      5F526573 
 1260      65745F69 
 1261              	.LASF6:
 1262 036e 6C6F6E67 		.ascii	"long long int\000"
 1262      206C6F6E 
 1262      6720696E 
 1262      7400
ARM GAS  C:\Users\M4rz4n\AppData\Local\Temp\ccWAu6Sf.s 			page 39


 1263              	.LASF34:
 1264 037c 54696D65 		.ascii	"Timer_Period_Reset_Start\000"
 1264      725F5065 
 1264      72696F64 
 1264      5F526573 
 1264      65745F53 
 1265              	.LASF23:
 1266 0395 696E7465 		.ascii	"interruptMode\000"
 1266      72727570 
 1266      744D6F64 
 1266      6500
 1267              	.LASF21:
 1268 03a3 54696D65 		.ascii	"Timer_Period_Reset_SetInterruptMode\000"
 1268      725F5065 
 1268      72696F64 
 1268      5F526573 
 1268      65745F53 
 1269              	.LASF2:
 1270 03c7 73686F72 		.ascii	"short int\000"
 1270      7420696E 
 1270      7400
 1271              	.LASF29:
 1272 03d1 54696D65 		.ascii	"Timer_Period_Reset_WriteCounter\000"
 1272      725F5065 
 1272      72696F64 
 1272      5F526573 
 1272      65745F57 
 1273              	.LASF4:
 1274 03f1 6C6F6E67 		.ascii	"long int\000"
 1274      20696E74 
 1274      00
 1275              	.LASF11:
 1276 03fa 63686172 		.ascii	"char\000"
 1276      00
 1277              	.LASF14:
 1278 03ff 6C6F6E67 		.ascii	"long double\000"
 1278      20646F75 
 1278      626C6500 
 1279              	.LASF0:
 1280 040b 7369676E 		.ascii	"signed char\000"
 1280      65642063 
 1280      68617200 
 1281              	.LASF18:
 1282 0417 54696D65 		.ascii	"Timer_Period_Reset_SoftwareCapture\000"
 1282      725F5065 
 1282      72696F64 
 1282      5F526573 
 1282      65745F53 
 1283              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
